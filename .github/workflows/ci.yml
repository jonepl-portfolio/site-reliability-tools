name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  validate-docker-compose:
    name: Validate Docker Compose Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: sudo chmod +x /usr/local/bin/docker-compose

      - name: Validate Docker Compose Files
        run: |
          docker-compose -f maintenance/docker-compose.yml config
          docker-compose -f security/docker-compose.local.yml config

  deploy-docker-compose:
    name: Deploy Docker Compose Files
    runs-on: ubuntu-latest
    needs: validate-docker-compose
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Ensure SSH key is available
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Check SSH connection
        run: ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} 'echo "SSH connection successful"'

      - name: Copy Docker Compose file to remote server
        run: |
          ssh-keyscan -t ed25519 ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hostsz
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 \
              security/certbot.sh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/srv/app/site-reliability-tools/security/
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 \
              security/docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/srv/app/site-reliability-tools/security/
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 \
              maintenance/docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/srv/app/site-reliability-tools/maintenance/
